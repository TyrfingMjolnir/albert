TODO:

  ~/.config/user-dirs.dirs ansprecvhen


Issues independant of versioning:
    Twitterplugin
    Implement help.. somehow
    Make websearch order changeable // Depends on actions
    Metatypes for styleditemdelegate (qss)   Make subline stylable too
    Spin gear until search is finished
    Move filedb to ram option

    Make qsett8ng standaer dponstrucable

Goal:  Port to e19

    Check EFL

Goal:  Final hotkey refinement (xcb)

    Make hotkeymanager a real manager, i.e. ability for multiple indep. hotkeys
    #Make cool sharedpointer design for hotkeys
    Use exceptions to propagate errors of the hotkeys (feedback to user)
    Maybe dropX11Extras by using completeley only XCB
    make all  noexcept

Goal: Pluginprofioler

Goal:  Python integration

    Implement some examples: Calc (Sympy), Terminal, ssh
    Implement the Python Extension Provider

Goal:  Allow plugins to provide fallbacks L={*}

Goal...

    MULTITHREADING

GOAL

    Check all usage counter + incrementers
    Fuzzy again is broken
    Use QTreeview to show actions
    check if removeing math worked
    rename all inteface files to ..._if.h
    Print Native Shiobn ohtkey
    Rewrite old stuff: Actions
    [app] use fallback if no icon in destkop file
    [Applauncher]  Rewrite module to extension
    [WebSearch]  Rewrite module to extension
    [WebSearch]  Fix library resource bug (unique names!)
    [ChromeBookmarks]  Rewrite module to extension
    [FireFoxBookmarks]  Rewrite module to extension


    [Core] Pluignblacklist in plugin area (config)
    [Core] Make a plugin class
    [Files]  Make the indexing fingrained by mimetype
    [Files]  Let indexed files be watched for 100 % synchronous index

________________________________________________________________________________
DONE (Changelog; features only):

0.7



    [Core] Read settings on instantiaton (faster, cleaner, no singletons)
    [Core] Implement actions
    [Files]  Filter indexed files by type
    [Files]  Let the index be build in background thread
    [Core]  Implement incremental update of the search index
    [Files]  Rewrite module to extension (sqlite based)
    [Core]  Make standard item which has a 100% relevance (currently in extIF)
    [Core]  Let settingswidgets be ESC closable
    [Core]  Elide text in plugin settings
    [Core]  Implement a cool messge logger
    [Core]  Implement plugin settings
    [Core]  Plugin infrastucture

0.6

________________________________________________________________________________
EXTENSION Properties

             hasTriggers (run exclusively)   | efficiency
             | startOnlyIfTriggered            | heavy output or resource consumption
             | | usageIsTracked                  | relevance
             | | | providesFallback                | convenience
             | | | | hasSearchIndex                  | performance
             | | | | | fuzzySearchable                 | tolerance
             ^ ^ ^ ^ ^ ^
             0 1 2 3 4 5
Files        - - + - + +      MIME
Apps         - - + - + +
Bookmarks    - - + - + +
ssh          + - + - - +
WebSearch    + - + + - -
Calc         + - - - - - I
Terminal     + + - ? - -
FileFinder   + + - - - -
Translate    + - - - - - I
Blogs        + - + - - -
System       - - + - - -
Dict         + ? - - - - I
Thunderbird  + - - - - -
Google       + + - - - -
Rhythmbox    - - - - - -  < kommt drauf an

________________________________________________________________________________









________________________________________________________________________________
Constraints for developers:
- If it is not performance critical use python, since it will not depend on binary apis that much
- Name plugins according the data they provide






























pub
    void setWatched();
    void setTimed();

    bool addDir(const QString &, bool recIndexUnindexed);
    bool removeDir(const QString &);
    void restoreDirs();

    void update();




priv
    void indexDir(const QString &, bool recIndexUnindexed);
    void cleanDir(const QString &, bool);

    QHash<QString, bool> _rootPaths;
    QSet<QString>        _indexedDirs;

    SharedFilePtrList    _index;

    bool                 _indexIsWatched;














